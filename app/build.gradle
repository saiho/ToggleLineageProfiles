plugins {
    id 'com.android.application'
}

def sourceProfileIconList = new File(buildDir, "generated/source/lists")

android {
    compileSdk 33
    buildToolsVersion '33.0.0'
    defaultConfig {
        applicationId "com.saiho.togglelineageprofiles"
        minSdk 27
        targetSdk 33
        versionCode 21
        versionName '1.0.21'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java {
                srcDirs += sourceProfileIconList
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    implementation files('libs/lineage-sdk-19.1-unofficial.jar')
}

task generateProfileIconList {
    doLast {
        println "Generating ProfileIconList.java"
        def content = "package com.saiho.togglelineageprofiles;\n"
        content += "public final class ProfileIconList {\n"
        content += "public static java.util.HashMap<String, Integer> ids = new java.util.HashMap<>();\n"
        content += "static {\n"
        file("src/main/res/drawable-nodpi").listFiles(new FilenameFilter() {
            @Override
            boolean accept(File file, String name) {
                return name.startsWith("profile_icon_") && name.endsWith(".png")
            }
        }).each {
            def fileName = it.name[0..it.name.length() - 5]
            content += "ids.put(\"" + fileName + "\", R.drawable." + fileName + ");\n"
        }
        content += "};\n"
        content += "}"

        def dir = new File(sourceProfileIconList, "com/saiho/togglelineageprofiles")
        dir.mkdirs()
        new File(dir, "ProfileIconList.java").text = content
    }
}
preBuild.dependsOn generateProfileIconList
