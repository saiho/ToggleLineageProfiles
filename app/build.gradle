plugins {
    alias(libs.plugins.android.application)
}

def sourceProfileIconList = getLayout().getBuildDirectory().dir("generated/source/lists").get()

android {
    namespace 'com.saiho.togglelineageprofiles'
    compileSdk 35

    defaultConfig {
        applicationId "com.saiho.togglelineageprofiles"
        minSdk 33
        targetSdk 35
        versionCode 1
        versionName '1.0.22'
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main {
            java {
                srcDirs += sourceProfileIconList
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
}

dependencies {
    implementation libs.material
    implementation files('libs/lineage-sdk-22.1-unofficial.jar')
}

tasks.register('generateProfileIconList') {
    doLast {
        println "Generating ProfileIconList.java"
        def content = '''\
            package com.saiho.togglelineageprofiles;
            public final class ProfileIconList {
            public static java.util.HashMap<String, Integer> ids = new java.util.HashMap<>();
            static {'''.stripIndent()
        file("src/main/res/drawable-nodpi")
            .listFiles((FilenameFilter) (file, name) -> name.startsWith("profile_icon_") && name.endsWith(".png"))
            .each {
                def fileName = it.name[0..it.name.length() - 5]
                content += "ids.put(\"" + fileName + "\", R.drawable." + fileName + ");\n"
            }
        content += "};\n}"

        def packageDir = sourceProfileIconList.dir("com/saiho/togglelineageprofiles")
        mkdir packageDir
        packageDir.file("ProfileIconList.java").asFile.text = content
    }
}
preBuild.dependsOn 'generateProfileIconList'
